{{- if .Values.cleanupJob.enabled -}}
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ include "backup.fullname" . }}-cleanup
  labels:
    {{- include "backup.labels" . | nindent 4 }}
spec:
  schedule: {{ .Values.cleanupJob.schedule | quote }}
  concurrencyPolicy: {{ .Values.cleanupJob.concurrencyPolicy }}
  successfulJobsHistoryLimit: {{ .Values.cleanupJob.successfulJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ .Values.cleanupJob.failedJobsHistoryLimit }}
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            {{- include "backup.selectorLabels" . | nindent 14 }}
        spec:
          {{- with .Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.cleanupJob.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          initContainers:
          - name: init
            image: "{{ .Values.cleanupJob.image.repository }}:{{ .Values.cleanupJob.image.tag }}"
            imagePullPolicy: {{ .Values.cleanupJob.image.pullPolicy }}
            command:
              - /bin/sh
            args:
              - -c
              - "restic -r {{ .Values.repo }} unlock"
            {{- if or .Values.backupJob.env }}
            env:
              {{- range $key, $value := .Values.backupJob.env }}
              - name: {{ $key }}
                value: {{ $value | quote }}
              {{- end }}
            {{- end }}
            envFrom:
              - secretRef:
                  name: {{ .Values.secretName }}
            {{- with .Values.cleanupJob.resources }}
            resources:
              {{- toYaml . | nindent 14 }}
            {{- end }}
            {{- if or .Values.pvc .Values.backupJob.backup.additionalVolumeMounts }}
            volumeMounts:
            {{- end }}
            {{- if .Values.pvc }}
              - mountPath: "/data"
                name: data
            {{- end }}
            {{- if .Values.backupJob.backup.additionalVolumeMounts }}
              {{- toYaml .Values.backupJob.backup.additionalVolumeMounts | nindent 14 }}
            {{- end }}
          containers:
          - name: cleanup
            image: "{{ .Values.cleanupJob.image.repository }}:{{ .Values.cleanupJob.image.tag }}"
            imagePullPolicy: {{ .Values.cleanupJob.image.pullPolicy }}
            {{- if .Values.cleanupJob.command }}
            command:
              {{- toYaml .Values.cleanupJob.command | nindent 14 }}
            {{- end }}
            args:
            {{- if .Values.cleanupJob.args }}
              {{- toYaml .Values.cleanupJob.args | nindent 14 }}
            {{- else }}
              - --no-cache
              - --verbose
              - --group-by
              - paths
              - --repo
              - {{ .Values.repo }}
              - forget
              - --prune
              - --keep-daily
              - {{ .Values.cleanupJob.keepDaily | quote }}
              - --keep-weekly
              - {{ .Values.cleanupJob.keepWeekly | quote }}
              - --keep-monthly
              - {{ .Values.cleanupJob.keepMonthly | quote }}
              - --keep-yearly
              - {{ .Values.cleanupJob.keepYearly | quote }}
            {{- end }}
            envFrom:
              - secretRef:
                  name: {{ .Values.secretName }}
             {{- if or .Values.backupJob.env }}
            env:
              {{- range $key, $value := .Values.backupJob.env }}
              - name: {{ $key }}
                value: {{ $value | quote }}
              {{- end }}
            {{- end }}
            {{- with .Values.cleanupJob.resources }}
            resources:
              {{- toYaml . | nindent 14 }}
            {{- end }}
            {{- if or .Values.pvc .Values.backupJob.backup.additionalVolumeMounts }}
            volumeMounts:
            {{- end }}
            {{- if .Values.pvc }}
              - mountPath: "/data"
                name: data
            {{- end }}
            {{- if .Values.backupJob.backup.additionalVolumeMounts }}
              {{- toYaml .Values.backupJob.backup.additionalVolumeMounts | nindent 14 }}
            {{- end }}
          restartPolicy: {{ .Values.cleanupJob.restartPolicy }}
          {{- with .Values.cleanupJob.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if .Values.cleanupJob.affinityLabels }}
          affinity:
            podAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchLabels: {{ toYaml .Values.cleanupJob.affinityLabels | nindent 22 }}
                  topologyKey: "kubernetes.io/hostname"
          {{- else }}
          {{- with .Values.cleanupJob.affinity }}
          affinity:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}
          {{- with .Values.cleanupJob.tolerations }}
          tolerations:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if or .Values.pvc .Values.backupJob.additionalVolumes }}
          volumes:
          {{- end }}
          {{- if .Values.pvc }}
            - name: data
              persistentVolumeClaim:
                claimName: {{ .Values.pvc }}
          {{- end }}
          {{- if .Values.backupJob.additionalVolumes }}
            {{- toYaml .Values.backupJob.additionalVolumes | nindent 12 }}
          {{- end }}
{{- end }}
